#!/usr/bin/perl -w
#
# Copyright (C) 2008 Nathan Haneysmith
#
# Munin plugin to monitor SQL Connections by use of SNMP.
# Based on snmp__df plugin.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; version 2 dated June,
# 1991.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
# $Log$
#
#
#
#%# family=snmpauto
#%# capabilities=snmpconf

use strict;
use Net::SNMP;

my $DEBUG = 0;

my $host      = $ENV{host}      || undef;
my $port      = $ENV{port}      || 161;
my $community = $ENV{community} || "public";

my $response;

if (defined $ARGV[0] and $ARGV[0] eq "snmpconf")
{
    print "require 1.3.6.1.4.1.311.1.4.1.1.2.\n"; # SQL mib
    exit 0;
}

if ($0 =~ /^(?:|.*\/)snmp_([^_]+)_sqlconnections$/)
{
    $host  = $1;
    if ($host =~ /^([^:]+):(\d+)$/)
    {
        $host = $1;
        $port = $2;
    }
}

elsif (!defined($host))
{
    print "# Debug: $0 -- $1\n" if $DEBUG;
    die "# Error: couldn't understand what I'm supposed to monitor.";
}

my ($session, $error) = Net::SNMP->session(
    -hostname  => $host,
    -community => $community,
    -port      => $port
    );

if (!defined ($session))
{
    die "Croaking: $error";
}

my $mssqlstatus = "1.3.6.1.4.1.311.1.4.1.1.2.";
$response = $session->get_table($mssqlstatus);

if (!defined ($response))
{
    die "Croaking: $error";
}

if (defined $ARGV[0] and $ARGV[0] eq "config")
{
    print "host_name $host\n";
    print "graph_title SQL Connections
graph_args --base 1000 -l 0
graph_vlabel number of connections
graph_scale no
graph_category SQL
graph_info This graph shows the number of SQL Connections.
connections.label connections
connections.draw LINE2
connections.type GAUGE
connections.info The number of open user connections
";
    exit 0;
}

# the values
while (my ($cpuoid, $value) = each(%$response)) {
    my @oid = split(/\./, $cpuoid);
    if ($oid[13] eq 16) {
     print "connections.value $value\n";
    }
}


